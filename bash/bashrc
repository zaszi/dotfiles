# -----------------------------------------------------------------------------
# GENERAL
# -----------------------------------------------------------------------------

# If not running interactively, abort
[ -z "$PS1" ] && return

# -----------------------------------------------------------------------------
# HISTORY
# -----------------------------------------------------------------------------

# Set increased history size
export HISTSIZE=10000
export HISTFILESIZE=10000

# Set history timestamps
export HISTTIMEFORMAT="%h %d %H:%M:%S "

# Force one command per line
shopt -s cmdhist

# Ignore duplicate entries
export HISTCONTROL=ignoredups

# Ignore several common commands
export HISTIGNORE="ls:ll:lt:pwd:history:exit"

# Append instead of overwrite history
shopt -s histappend

# Store history immediately
PROMPT_COMMAND='history -a'

# -----------------------------------------------------------------------------
# COMPLETION
# -----------------------------------------------------------------------------

# Enable bash completion, if available
if [ -f "/usr/share/bash-completion/bash_completion" ]; then
    source /usr/share/bash-completion/bash_completion
fi

# Enable fzf keybindings, if available
if [ -f "/usr/share/fzf/key-bindings.bash" ]; then
    source /usr/share/fzf/key-bindings.bash
fi

# Enable fzf completions, if available
if [ -f "/usr/share/fzf/completion.bash" ]; then
    source /usr/share/fzf/completion.bash
fi

# Enable pkgfile 'command not found' completion, if available
if [ -f "/usr/share/doc/pkgfile/command-not-found.bash" ]; then
    source /usr/share/doc/pkgfile/command-not-found.bash
fi

# Mimic zsh run-help ability - press ALT+h to open manpage of current command
if [ -n "$PS1" ]; then
    run-help() {
        help "$READLINE_LINE" 2>/dev/null || man "$READLINE_LINE"
    }
    bind -m vi-insert -x '"\eh": run-help'
    bind -m emacs -x '"\eh": run-help'
fi

# Provide pass compatility for GnuPG token
if command -v gpg &>/dev/null && command -v pass &>/dev/null; then
    pass() {
        local GPG_TTY
        GPG_TTY=$(tty)
        export GPG_TTY
        gpg-connect-agent updatestartuptty /bye >/dev/null
        # Workaround for GnuPG bug preventing pinentry from showing up
        gpg --card-status >/dev/null
        command pass "$@"
    }
fi

# Provide SSH compatility for GnuPG token
if command -v gpg &>/dev/null && command -v ssh &>/dev/null; then
    export SSH_AGENT_PID=""
    declare SSH_AUTH_SOCK
    SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
    export SSH_AUTH_SOCK
    ssh() {
        local GPG_TTY
        GPG_TTY=$(tty)
        export GPG_TTY
        gpg-connect-agent updatestartuptty /bye >/dev/null
        command ssh "$@"
    }
fi

# Provide git compatility for GnuPG token
if command -v gpg &>/dev/null && command -v git &>/dev/null; then
    git() {
        local GPG_TTY
        GPG_TTY=$(tty)
        export GPG_TTY
        gpg-connect-agent updatestartuptty /bye >/dev/null
        command git "$@"
    }
fi

# -----------------------------------------------------------------------------
# USER
# -----------------------------------------------------------------------------

# Set safer umask
umask 0077

# Set neovim as the default editor
if command -v nvim &>/dev/null; then
    export EDITOR="nvim"
fi

# We often develop in Rust, a backtrace by default is handy
if [ -f "$HOME/.cargo/bin" ]; then
    export RUST_BACKTRACE=1
fi

# -----------------------------------------------------------------------------
# ALIASES
# -----------------------------------------------------------------------------

# Make aliases work under sudo.
# https://askubuntu.com/questions/22037/aliases-not-available-when-using-sudo
alias sudo='sudo '

# Like cat, but with colors and pager, if available
if command -v bat &>/dev/null; then
    alias cat="bat --plain --theme='gruvbox-dark'"
fi

# An ls with better defaults and colors, if available
if command -v exa &>/dev/null; then
    alias ls="exa"
    alias ll="exa --all --long --group"
    alias lt="exa --all --tree"
fi

# We use neovim in this household
if command -v nvim &>/dev/null; then
    alias vi="nvim"
    alias vim="nvim"
fi

# An interactive AUR installation command using yay
if command -v yay &>/dev/null && command -v fzf &>/dev/null; then
    alias fay="yay -Slq | fzf -m --preview 'yay -Si {1}'| xargs -ro yay -S"
fi

# A paste service that doesn't suck
if command -v curl &>/dev/null; then
    alias pastebin="curl -F'file=@-' 'https://0x0.st'"
fi

# Password store for work
if command -v pass &>/dev/null; then
    alias passwork="PASSWORD_STORE_DIR=~/documents/work/password-store pass"
fi

# -----------------------------------------------------------------------------
# PROMPT AND COLORS
# -----------------------------------------------------------------------------

# Set more readable pager colors
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Load Starship, if available
# https://starship.rs/
if command -v starship &>/dev/null; then
    eval "$(starship init bash)"
fi
